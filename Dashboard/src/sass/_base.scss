@import "variables";

@mixin prefix($declarations, $prefixes: ()) {
	@each $property, $value in $declarations {
		@each $prefix in $prefixes {
			#{'-' + $prefix + '-' + $property}: $value;
		}
		#{$property}: $value;
	}
}

html {
	height: 100%;
}

body,
button,
input,
optgroup,
select,
textarea {
	font-family: 'Roboto', sans-serif;
}

body {
	min-height: 100%;
	height: 100%;
	overflow: hidden;
	@include prefix((user-select: none), webkit moz khtml ms);

	.app {
		height: 100%;
	}
}

//Util classes
.ellipsis {
	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;
}

.none {
	display: none;
}

.pointer {
	cursor: pointer;
}

a {
	text-decoration: none;
}

button {
	border-radius: $border-radius-btn;

	&:focus {
		outline: 0
	}
}

@mixin for-phone-only {
	@media (max-width: 599px) { @content; }
}
@mixin for-tablet-portrait-up {
	@media (min-width: 600px) { @content; }
}
@mixin for-tablet-landscape-up {
	@media (min-width: 900px) { @content; }
}
@mixin for-desktop-up {
	@media (min-width: 1200px) { @content; }
}
@mixin for-desktop-up-1300 {
	@media (min-width: 1360px) { @content; }
}
@mixin for-medium-desktop-up {
	@media (min-width: 1600px) { @content; }
}
@mixin for-big-desktop-up {
	@media (min-width: 1800px) { @content; }
}
@mixin width-height($width, $height) {
	width: $width;
	height: $height;
}

.wrapper {
	padding: 0 $padding-beta/2 $padding-alpha*0.7 $padding-beta/2;

	@include for-tablet-portrait-up {
		padding: 0 $padding-beta $padding-alpha $padding-alpha*3;
	}
}

.sticky-title {
	width: 100%;
	font-weight: $font-weight-medium;
	padding: $padding-alpha $padding-beta/2;
	height: $sticky-title-height-phone;
	display: flex;
	align-items: center;

	@include for-tablet-portrait-up {
		padding: $padding-beta/2 $padding-beta $padding-beta/2 $padding-alpha*3;
		height: $sticky-title-height;
	}

	.sticky-title-text {
		color: $silver;
		display: inline-block;

		&:hover {
			text-decoration: underline;
			cursor: pointer;
		}

		&.active {
			color: $kitsune-orange;

			&.subRoute {
				margin-left: .2rem;
			}

			&:hover {
				text-decoration: none;
				cursor: auto;
			}
		}
	}
}

@mixin placeholder($font-size, $padding, $color) {
	&::-webkit-input-placeholder {
		font-size: $font-size;
		padding-left: $padding;
		color: $color;
		opacity: 0.3;
	}
	&:-moz-placeholder {
		font-size: $font-size;
		padding-left: $padding;
		color: $color;
		opacity: 0.3;
	}
	&::-moz-placeholder {
		font-size: $font-size;
		padding-left: $padding;
		color: $color;
		opacity: 0.3;
	}
	&:-ms-input-placeholder {
		font-size: $font-size;
		padding-left: $padding;
		color: $color;
		opacity: 0.3;
	}
	&::-ms-input-placeholder {
		font-size: $font-size;
		padding-left: $padding;
		color: $color;
		opacity: 0.3;
	}
}

.slideInRight {
	@include prefix((animation: slideInRight 0.3s), webkit moz o)
}

.slideInUp {
	@include prefix((animation: slideInUp 0.3s), webkit moz o)
}

.slideOutUp {
	@include prefix((animation: slideOutUp 0.3s), webkit moz o)
}

.slideOutRight {
	@include prefix((animation: slideOutRight 0.3s), webkit moz o)
}
.slideInLeft {
	@include prefix((animation: slideInLeft 0.3s), webkit moz o)
}
.slideOutLeft {
	@include prefix((animation: slideOutLeft 0.3s), webkit moz o)
}
.fadeInDown {
	@include prefix((animation: fadeInDown 0.3s), webkit moz o)
}
.fadeInUp {
	@include prefix((animation: fadeInUp 0.3s), webkit moz o)
}
.fadeInLeft {
	@include prefix((animation: fadeInLeft 0.3s), webkit moz o)
}
.fadeInLeft {
	@include prefix((animation: fadeOutLeft 0.3s), webkit moz o)
}

.fadeIn {
	@include prefix((animation: fadeIn 0.3s), webkit moz o)
}

.fadeOut {
	@include prefix((animation: fadeOut 0.3s), webkit moz o)
}

.zoomIn {
	@include prefix((animation: zoomIn 0.3s), webkit moz o)
}


.dots-loader,
.btn.processing {
	color: $scorpion;

	&:after {
		content: '.';
		animation: dots 1s steps(5, end) infinite;
	}
}

@mixin text-gradient-animation ($color1, $color2) {
	background: linear-gradient(to left, $color1 20%, $color2 40%, $color2 60%, $color1 80%);
	background-size: 200% auto;
	background-clip: text;
	-webkit-background-clip: text;
	-webkit-text-fill-color: transparent;

	animation: shine 2s linear infinite;
	animation-direction: reverse;
	@keyframes shine {
		to {
			background-position: 200% center;
		}
	}
}

@keyframes dots {
	0%, 20% {
		color: rgba(0,0,0,0);
		text-shadow:
			.25em 0 0 rgba(0,0,0,0),
			.5em 0 0 rgba(0,0,0,0);}
	40% {
		color: $scorpion;
		text-shadow:
			.25em 0 0 rgba(0,0,0,0),
			.5em 0 0  rgba(0,0,0,0);}
	60% {
		text-shadow:
			.25em 0 0 $scorpion,
			.5em 0 0  rgba(0,0,0,0)}
	80%, 100% {
		text-shadow:
			.25em 0 0 $scorpion,
			.5em 0 0 $scorpion;}}


.kbtn {
	background-color: $white;
	color: $kitsune-orange;
	border: 1px solid $kitsune-orange;
	outline: none;
	box-shadow: none;
	padding: 0.4em 1.5em;

	&-primary {
		color: $white;
		padding: 0.4em 1.5em;
		background-color: $kitsune-orange;

		&:active:focus,
		&:focus{
			outline: none;
			box-shadow: none;
			color: $white;
		}

		&:disabled {
			cursor: auto;
		}

		&:hover{
			color: $white;
			&:not(:disabled) {
				transform: translateY(-1px);
				box-shadow: 0 7px 14px rgba(50, 50, 93, 0.1), 0 3px 6px rgba(0, 0, 0, 0.08);
			}
		}

	}

	&-secondary {
		color: $white;
		background-color: $silver;
		box-shadow: none;
		padding: 0.4em 1.5em;

		&:disabled {
			cursor: auto;
		}

		&:active:focus,
		&:focus{
			outline: none;
			box-shadow: none;
			color: $white;
		}

		&:hover{
			color: $white;
			&:not(:disabled) {
				transform: translateY(-1px);
				box-shadow: 0 7px 14px rgba(50, 50, 93, 0.1), 0 3px 6px rgba(0, 0, 0, 0.08);
			}
		}
	}


	&:active:focus,
	&:focus{
		outline: none;
		box-shadow: none;
		color: $kitsune-orange;
	}

	&:hover{
		color: $white;
		background-color: $kitsune-orange;
	}

}

.kbtn-secondary + .kbtn-primary {
	margin-left: 5px;
}

.customSlideInRight{
	animation: slideInRightWithOpacity 0.3s;
}

@keyframes slideInRightWithOpacity {
	from {
		transform: translate3d(100%, 0, 0);
		opacity: 0;
	}

	to {
		transform: translate3d(0, 0, 0);
		opacity: 1;
	}
}

.customSlideInLeft{
	animation: slideInLeftWithOpacity .3s;
}

@keyframes slideInLeftWithOpacity {
	from {
		transform: translate3d(-100%, 0, 0);
		opacity: 0;
	}

	to {
		transform: translate3d(0, 0, 0);
		opacity: 1;
	}
}

@mixin floatingLabel($left, $top, $font-size, $color) {
	.floating-label {
		position: absolute;
		pointer-events: none;
		left: $left;
		top: $top;
		font-size: $font-size;
		transition: 0.1s ease all;
		opacity: 0;
		color: $color;

		&.state {
			left: 0;
		}

		&.active {
			opacity: 1;
			text-transform: uppercase;
		}
	}
}

// test




@mixin dots-loading($name,$font-color){
	color: $font-color;

	&:after {
		content: '.';
		animation: #{$name} 1s steps(4, end) infinite;
	}
}

@mixin k-keyframes($name,$color) {
	@keyframes #{$name} {
		0%, 20% {
			color: rgba(0,0,0,0);
			text-shadow:
				.25em 0 0 rgba(0,0,0,0),
				.5em 0 0 rgba(0,0,0,0);}
		40% {
			color: #{$color};
			text-shadow:
				.25em 0 0 rgba(0,0,0,0),
				.5em 0 0  rgba(0,0,0,0);}
		60% {
			text-shadow:
				.25em 0 0 #{$color},
				.5em 0 0  rgba(0,0,0,0)}
		80%, 100% {
			text-shadow:
				.25em 0 0 #{$color},
				.5em 0 0 #{$color}}
	}
}

.coming-soon {
	cursor: auto;
	background-color: rgba(0,0,0,0.1);
	opacity: 0.5;
	color: $dove-gray;
}

/*@mixin wave-animation ($wave-top-position, $duration) {
	position: absolute;
	top: $wave-top-position;
	width: 6400px;
	height: 198px;
	animation: wave $duration cubic-bezier( 0.36, 0.45, 0.63, 0.53) infinite, swell $duration ease -1.25s infinite;
	background-repeat: repeat-x;
}*/

@mixin waves($no-of-waves) {
	@for $i from 1 through $no-of-waves {
		$offset: -100px * $i * 4;

		.wave-#{$i} {
			@include wave-animation($i, $wave-top-position, 10s + $i*2);
			background-image: url("../assets/icons/wave-#{$i}.svg");

			/*@include media-min-width(900px) {
				top: $wave-top-position;
			}*/
			@include for-phone-only {
				top: $wave-top-position-phone-only;

				@media screen and (orientation: landscape){
					top: $wave-top-position-portrait-landscape;
				}
			}

			@include for-tablet-portrait-up {
				@media screen and (orientation: landscape){
					top: $wave-top-position-portrait-landscape;
				}
			}

			@include for-tablet-landscape-up {
				top: $wave-top-position;
			}
		}

		@keyframes wave-#{$i} {
			0% {
				margin-left: $offset;
			}
			100% {
				margin-left: -1600px + $offset;
			}
		}
	}

	@keyframes swell {
		0%, 100% {
			transform: translate3d(0,-25px,0);
		}
		50% {
			transform: translate3d(0,5px,0);
		}
	}
}

@mixin wave-animation ($wave-no, $wave-top-position, $duration) {
	position: absolute;
	top: $wave-top-position;
	width: 6400px;
	height: 198px;
	animation: wave-#{$wave-no} $duration cubic-bezier( 0.36, 0.45, 0.63, 0.53) infinite, swell $duration ease -1.25s infinite;
	background-repeat: repeat-x;
}

@mixin updates-back-arrow {
	width: 1.5em;
	height: 1.5em;
	padding: $padding-alpha/2;
	display: inline-block;
	background: url("../../assets/icons/arrow-right.svg") no-repeat center;
	background-size: $updates-icon-width*0.7 auto;
	position: absolute;
	right: 10px;
	top: 15px;
	opacity: 0.4;
	cursor: pointer;
	border-radius: 50%;
	border: 1px solid rgba(141, 141, 141, 0.3);
	transition: background-color 100ms linear;

	&:hover {
		background: rgba(191, 191, 191, 0.3) url("../../assets/icons/arrow-right-white.svg") no-repeat center;
		background-size: $updates-icon-width*0.7 auto;
		border: none;
	}
}

.field-set {
	border: 2px solid $white;
	border-radius: $border-radius;
	padding: $padding-beta/2;
	transition: all 0.4s ease-in-out;

	@include for-desktop-up {
		padding: $padding-beta/2 $padding-beta;
	}

	.legend {
		font-weight: $font-weight-thin;
		width: unset;
		padding: 0 15px;

		@include for-tablet-portrait-up {
			font-size: 1.2em;
		}

		@include for-desktop-up {
			font-size: 1.4em;
		}
	}
}

@mixin hovering-label ($color, $top, $left, $font_size){
	position: absolute;
	left: $left;
	top: $top;
	font-size: $font_size;
	border-radius: $border-radius;
	opacity: 0;
	color: $color;
	text-transform: uppercase;
	@include prefix((transition: opacity 0.3s), webkit moz o);

	&.active {
		opacity: 1;
	}
}

@mixin input-error($size, $right, $bottom) {
	position: absolute;
	background: url("../assets/icons/Validation.svg") no-repeat center center;
	background-size: $size;
	padding: 1em;
	bottom: $bottom;
	right: $right;
	visibility: hidden;

	&.active{
		visibility: visible;
	}
}

.base-modal-footer-margin {
	margin-top: 2em;
}

@mixin triangle-down($size, $color, $bool) {
	width: 2px;
	height: 0;
	border-left: $size - 1 solid transparent;
	border-right: $size - 1 solid transparent;
	@if $bool == true {
		border-top: $size solid $color;
	} @else {
		border-bottom: $size solid $color;
	}
}

.base-modal {
	&-container {
		left: 0;
		top: 0;
		height: 100%;
		width: 100%;
		position: absolute;
		display: flex;
		justify-content: center;
		align-items: center;
	}
}

@mixin base-modal-body ($color, $width) {
	background-color: $color;
	width: $width;
	z-index: 105;
	border-radius: $border-radius;

	@include for-phone-only {
		width: 95vw;
	}
}

@mixin base-modal-header ($padding, $img-width, $img-margin-right) {
	background: $modal-header-gradient;
	padding: $padding;
	display: flex;
	align-items: center;
	border-radius: $border-radius $border-radius 0 0;
	position: relative;

	& .close-icon {
		width: 1.3em;
		height: 1.3em;
		position: absolute;
		top: 10px;
		right: 10px;
		cursor: pointer;
		background: url("../assets/icons/close_black.svg") no-repeat center;
		background-size: contain;
		transition: background 200ms ease-in-out;

		&:hover {
			background: url("../assets/icons/close_black_hover.svg") no-repeat center;
			background-size: contain
		}
	}

	> img {
		width: $img-width;
		height: $img-width;
		object-fit: contain;
		margin-right: $img-margin-right;
	}

	& .header {
		color: $dove-gray;
		font-weight: $font-weight-medium;
		font-size: 1.25rem;
		margin-bottom: 4px;
	}

	& .subheader {
		font-size: .8rem;
		color: $dustyGrey;
		font-weight: $font-weight-medium;
	}
}

@mixin loader-container($padding) {
	position: relative;
	padding: $padding;
}

@mixin input-fields ($color, $focusColor, $font-size, $padding) {
	width: 100%;
	font-size: $font-size;
	color: $dove-gray;
	border-radius: $border-radius;
	border: 1px solid transparentize($grey, .75);
	padding: $padding;
	outline: 0;
	caret-color: $kitsune-orange;

	&:focus {
		border: 1px solid $focusColor;
		outline: 0;
	}

	@include placeholder(1em, auto, $silver);
}

@mixin radio-container($height: unset) {
	position: relative;
	height: $height;
}

@mixin radio-checked($color, $top, $left, $padding) {
	padding: $padding;
	position: absolute;
	background-color: $color;
	border-radius: 100%;
	top: $top;
	left: $left;
}

@mixin custom-radio-btn($border-color, $padding) {
	-moz-appearance:none;
	-webkit-appearance:none;
	-o-appearance:none;
	border-radius: 100%;
	border: 2px solid $border-color;
	padding: $padding;
	outline: none;
	position: relative;
	margin: 0;
	background-color: transparent;
	cursor: pointer;

	&:focus {
		outline: 0;
	}
}

.font-medium {
	font-weight: $font-weight-medium;
}

.lazyLoader {
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	width: 100%;
	animation: lazy 4s linear infinite;
	color: $boulder;
	font-size: 1.2rem;

	&>img {
		width: 50px;
		margin-bottom: 10px;
	}
}

@keyframes lazy {
	0% {
		opacity: .5;
	}

	100% {
		opacity: .8;
	}
}


.weight-500 {
	font-weight: $font-weight-medium;
}
